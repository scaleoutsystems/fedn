name: "unit testing"

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '.github/**'
    branches:
      - master
      - develop
      - "release/**"
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '.github/**'
    branches:
      - "**"




jobs:
  unittest-pytests:
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12"]
        os:
          - ubuntu-24.04
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        environment:
          POSTGRES_USER: unittest_username
          POSTGRES_PASSWORD: unittest_password
          POSTGRES_DB: testdb
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U testuser"]
          interval: 10s
          timeout: 5s
          retries: 5

      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017
        environment:
          MONGO_INITDB_ROOT_USERNAME: unittest_username
          MONGO_INITDB_ROOT_PASSWORD: unittest_password
        healthcheck:
          test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
          interval: 10s
          timeout: 5s
          retries: 5
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pytest docker
      - name: Run tests
        env: 
          UNITTEST_DBUSER: unittest_username
          UNITTEST_DBPASS: unittest_password
        run: |
          pytest fedn/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
          