Split Learning Titanic Example in FEDn
======================================

To run the commands, first git clone this repository and switch to the branch containing this code. 
In order to be able to run this example, you need to install FEDn in development mode. 
It is best if you create a virtual environment for this. 

.. code-block:: bash

    git clone https://github.com/fedn/fedn.git
    cd fedn
    pip install -e .


Also install the following libraries into your virtual environment:

.. code-block:: bash

    pip install pandas torch scikit-learn


Create a client.yaml file in the examples/splitlearning_titanic folder and add the following content:

.. code-block:: bash
    network_id: fedn-network
    api_url: http://api-server:8092
    discover_host: api-server
    discover_port: 8092


Data Preparation
----------------

Make sure the titanic dataset is downloaded in the splitlearning_titanic/data folder with the files "labels.csv", "train.csv" and "test.csv".
Download the dataset from https://www.kaggle.com/competitions/titanic/data if necessary.

We split the dataset (vertical split) into 2 clients. For this, locate yourself in the examples/splitlearning_titanic folder and run:

.. code-block:: bash

    python3 data.py

Compute Package
---------------

Then, to create the compute package, run:

.. code-block:: bash

    fedn package create --path client

Note: For split learning, we do not need a seed model as for horizontal federated learning. 

Environment Variables
---------------------

Now, set up the necessary environment variables:

.. code-block:: bash

    export FEDN_COMPUTE_PACKAGE_DIR=/path/to/fedn/examples/splitlearning_titanic
    export FEDN_LABELS_PATH=/path/to/labels.pt

In 2 different client terminals, set the data path to the client data folder generated by the data.py script.

.. code-block:: bash

    export FEDN_DATA_PATH=./data/clients/1/titanic.pt  
    export FEDN_DATA_PATH=./data/clients/2/titanic.pt  

Local Setup with FEDn
---------------------

Currently, Split Learning can only be run locally. To start all necessary services, run the following commands in different terminals:

To start mongo and minio

.. code-block:: bash

    docker compose up -d mongo minio

Start the controller

.. code-block:: bash

    fedn controller start

Start the combiner

.. code-block:: bash

    fedn combiner start

To start each of the two clients, run the following command in two different terminals with the appropriate data path environment variable.

.. code-block:: bash

    fedn client start --api-url http://localhost --api-port 8092 -in client.yaml --local-package


Starting the Split Learning Training
-------------------------------------

We are going to start the training through the API Client. 
Go to the api.ipynb file and execute the cells. If everything is set up correctly, you should see the training start.





